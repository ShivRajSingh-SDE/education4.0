{"ast":null,"code":"import _toConsumableArray from\"C:/Users/shivr/Downloads/2/Shiv/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/shivr/Downloads/2/Shiv/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import\"./Login.css\";import{jsx as _jsx}from\"react/jsx-runtime\";var OTPInput=function OTPInput(_ref){var length=_ref.length,onChange=_ref.onChange;var _useState=useState(Array(length).fill(\"\")),_useState2=_slicedToArray(_useState,2),otp=_useState2[0],setOtp=_useState2[1];var handleChange=function handleChange(e,index){var value=e.target.value;// Ensure input is a number\nif(/[^0-9]/.test(value)){return;}// Update the OTP array with the new value\nvar newOtp=_toConsumableArray(otp);newOtp[index]=value;setOtp(newOtp);// Join the OTP array into a single string and pass it to the parent component\nonChange(newOtp.join(\"\"));};var handleKeyDown=function handleKeyDown(e,index){if(e.key===\"Backspace\"&&index>0){// Move focus to the previous input on Backspace\ndocument.getElementById(\"otp-\".concat(index-1)).focus();}else if(e.key===\"ArrowRight\"&&index<length-1){// Move focus to the next input on ArrowRight\ndocument.getElementById(\"otp-\".concat(index+1)).focus();}};return/*#__PURE__*/_jsx(\"div\",{className:\"otp-input-container\",children:otp.map(function(digit,index){return/*#__PURE__*/_jsx(\"input\",{id:\"otp-\".concat(index),type:\"text\",inputMode:\"numeric\",pattern:\"[0-9]*\",maxLength:\"1\",value:digit,onChange:function onChange(e){return handleChange(e,index);},onKeyDown:function onKeyDown(e){return handleKeyDown(e,index);}},index);})});};export default OTPInput;","map":{"version":3,"names":["React","useState","jsx","_jsx","OTPInput","_ref","length","onChange","_useState","Array","fill","_useState2","_slicedToArray","otp","setOtp","handleChange","e","index","value","target","test","newOtp","_toConsumableArray","join","handleKeyDown","key","document","getElementById","concat","focus","className","children","map","digit","id","type","inputMode","pattern","maxLength","onKeyDown"],"sources":["C:/Users/shivr/Downloads/2/Shiv/src/Auth/OTPInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Login.css\";\r\n\r\nconst OTPInput = ({ length, onChange }) => {\r\n  const [otp, setOtp] = useState(Array(length).fill(\"\"));\r\n\r\n  const handleChange = (e, index) => {\r\n    const value = e.target.value;\r\n\r\n    // Ensure input is a number\r\n    if (/[^0-9]/.test(value)) {\r\n      return;\r\n    }\r\n\r\n    // Update the OTP array with the new value\r\n    const newOtp = [...otp];\r\n    newOtp[index] = value;\r\n    setOtp(newOtp);\r\n\r\n    // Join the OTP array into a single string and pass it to the parent component\r\n    onChange(newOtp.join(\"\"));\r\n  };\r\n\r\n  const handleKeyDown = (e, index) => {\r\n    if (e.key === \"Backspace\" && index > 0) {\r\n      // Move focus to the previous input on Backspace\r\n      document.getElementById(`otp-${index - 1}`).focus();\r\n    } else if (e.key === \"ArrowRight\" && index < length - 1) {\r\n      // Move focus to the next input on ArrowRight\r\n      document.getElementById(`otp-${index + 1}`).focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-input-container\">\r\n      {otp.map((digit, index) => (\r\n        <input\r\n          key={index}\r\n          id={`otp-${index}`}\r\n          type=\"text\"\r\n          inputMode=\"numeric\"\r\n          pattern=\"[0-9]*\"\r\n          maxLength=\"1\"\r\n          value={digit}\r\n          onChange={(e) => handleChange(e, index)}\r\n          onKeyDown={(e) => handleKeyDown(e, index)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nOTPInput.propTypes = {\r\n  length: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default OTPInput;\r\n"],"mappings":"kPAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAEvC,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErB,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAAC,IAAA,CAA6B,IAAvB,CAAAC,MAAM,CAAAD,IAAA,CAANC,MAAM,CAAEC,QAAQ,CAAAF,IAAA,CAARE,QAAQ,CAClC,IAAAC,SAAA,CAAsBP,QAAQ,CAACQ,KAAK,CAACH,MAAM,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAAC,UAAA,CAAAC,cAAA,CAAAJ,SAAA,IAA/CK,GAAG,CAAAF,UAAA,IAAEG,MAAM,CAAAH,UAAA,IAElB,GAAM,CAAAI,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,CAAC,CAAEC,KAAK,CAAK,CACjC,GAAM,CAAAC,KAAK,CAAGF,CAAC,CAACG,MAAM,CAACD,KAAK,CAE5B;AACA,GAAI,QAAQ,CAACE,IAAI,CAACF,KAAK,CAAC,CAAE,CACxB,OACF,CAEA;AACA,GAAM,CAAAG,MAAM,CAAAC,kBAAA,CAAOT,GAAG,CAAC,CACvBQ,MAAM,CAACJ,KAAK,CAAC,CAAGC,KAAK,CACrBJ,MAAM,CAACO,MAAM,CAAC,CAEd;AACAd,QAAQ,CAACc,MAAM,CAACE,IAAI,CAAC,EAAE,CAAC,CAAC,CAC3B,CAAC,CAED,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIR,CAAC,CAAEC,KAAK,CAAK,CAClC,GAAID,CAAC,CAACS,GAAG,GAAK,WAAW,EAAIR,KAAK,CAAG,CAAC,CAAE,CACtC;AACAS,QAAQ,CAACC,cAAc,QAAAC,MAAA,CAAQX,KAAK,CAAG,CAAC,CAAE,CAAC,CAACY,KAAK,CAAC,CAAC,CACrD,CAAC,IAAM,IAAIb,CAAC,CAACS,GAAG,GAAK,YAAY,EAAIR,KAAK,CAAGX,MAAM,CAAG,CAAC,CAAE,CACvD;AACAoB,QAAQ,CAACC,cAAc,QAAAC,MAAA,CAAQX,KAAK,CAAG,CAAC,CAAE,CAAC,CAACY,KAAK,CAAC,CAAC,CACrD,CACF,CAAC,CAED,mBACE1B,IAAA,QAAK2B,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CACjClB,GAAG,CAACmB,GAAG,CAAC,SAACC,KAAK,CAAEhB,KAAK,qBACpBd,IAAA,UAEE+B,EAAE,QAAAN,MAAA,CAASX,KAAK,CAAG,CACnBkB,IAAI,CAAC,MAAM,CACXC,SAAS,CAAC,SAAS,CACnBC,OAAO,CAAC,QAAQ,CAChBC,SAAS,CAAC,GAAG,CACbpB,KAAK,CAAEe,KAAM,CACb1B,QAAQ,CAAE,SAAAA,SAACS,CAAC,QAAK,CAAAD,YAAY,CAACC,CAAC,CAAEC,KAAK,CAAC,EAAC,CACxCsB,SAAS,CAAE,SAAAA,UAACvB,CAAC,QAAK,CAAAQ,aAAa,CAACR,CAAC,CAAEC,KAAK,CAAC,EAAC,EARrCA,KASN,CAAC,EACH,CAAC,CACC,CAAC,CAEV,CAAC,CAOD,cAAe,CAAAb,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}