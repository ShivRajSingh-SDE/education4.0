{"ast":null,"code":"'use client';\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { getTheme } from '../../theme-store';\nimport { NavbarBrand } from './NavbarBrand';\nimport { NavbarCollapse } from './NavbarCollapse';\nimport { NavbarContext } from './NavbarContext';\nimport { NavbarLink } from './NavbarLink';\nimport { NavbarToggle } from './NavbarToggle';\nconst NavbarComponent = ({\n  border,\n  children,\n  className,\n  fluid = false,\n  menuOpen,\n  rounded,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const [isOpen, setIsOpen] = useState(menuOpen);\n  const theme = mergeDeep(getTheme().navbar, customTheme);\n  return _jsx(NavbarContext.Provider, {\n    value: {\n      theme,\n      isOpen,\n      setIsOpen\n    },\n    children: _jsx(\"nav\", {\n      className: twMerge(theme.root.base, theme.root.bordered[border ? 'on' : 'off'], theme.root.rounded[rounded ? 'on' : 'off'], className),\n      ...props,\n      children: _jsx(\"div\", {\n        className: twMerge(theme.root.inner.base, theme.root.inner.fluid[fluid ? 'on' : 'off']),\n        children: children\n      })\n    })\n  });\n};\nNavbarComponent.displayName = 'Navbar';\nNavbarBrand.displayName = 'Navbar.Brand';\nNavbarCollapse.displayName = 'Navbar.Collapse';\nNavbarLink.displayName = 'Navbar.Link';\nNavbarToggle.displayName = 'Navbar.Toggle';\nexport const Navbar = Object.assign(NavbarComponent, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Link: NavbarLink,\n  Toggle: NavbarToggle\n});","map":{"version":3,"names":["jsx","_jsx","useState","twMerge","mergeDeep","getTheme","NavbarBrand","NavbarCollapse","NavbarContext","NavbarLink","NavbarToggle","NavbarComponent","border","children","className","fluid","menuOpen","rounded","theme","customTheme","props","isOpen","setIsOpen","navbar","Provider","value","root","base","bordered","inner","displayName","Navbar","Object","assign","Brand","Collapse","Link","Toggle"],"sources":["C:/Users/shivr/Downloads/2/Shiv/node_modules/flowbite-react/lib/esm/components/Navbar/Navbar.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { getTheme } from '../../theme-store';\nimport { NavbarBrand } from './NavbarBrand';\nimport { NavbarCollapse } from './NavbarCollapse';\nimport { NavbarContext } from './NavbarContext';\nimport { NavbarLink } from './NavbarLink';\nimport { NavbarToggle } from './NavbarToggle';\nconst NavbarComponent = ({ border, children, className, fluid = false, menuOpen, rounded, theme: customTheme = {}, ...props }) => {\n    const [isOpen, setIsOpen] = useState(menuOpen);\n    const theme = mergeDeep(getTheme().navbar, customTheme);\n    return (_jsx(NavbarContext.Provider, { value: { theme, isOpen, setIsOpen }, children: _jsx(\"nav\", { className: twMerge(theme.root.base, theme.root.bordered[border ? 'on' : 'off'], theme.root.rounded[rounded ? 'on' : 'off'], className), ...props, children: _jsx(\"div\", { className: twMerge(theme.root.inner.base, theme.root.inner.fluid[fluid ? 'on' : 'off']), children: children }) }) }));\n};\nNavbarComponent.displayName = 'Navbar';\nNavbarBrand.displayName = 'Navbar.Brand';\nNavbarCollapse.displayName = 'Navbar.Collapse';\nNavbarLink.displayName = 'Navbar.Link';\nNavbarToggle.displayName = 'Navbar.Toggle';\nexport const Navbar = Object.assign(NavbarComponent, {\n    Brand: NavbarBrand,\n    Collapse: NavbarCollapse,\n    Link: NavbarLink,\n    Toggle: NavbarToggle,\n});\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,MAAMC,eAAe,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,KAAK,GAAG,KAAK;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,KAAK,EAAEC,WAAW,GAAG,CAAC,CAAC;EAAE,GAAGC;AAAM,CAAC,KAAK;EAC9H,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAACc,QAAQ,CAAC;EAC9C,MAAME,KAAK,GAAGd,SAAS,CAACC,QAAQ,CAAC,CAAC,CAACkB,MAAM,EAAEJ,WAAW,CAAC;EACvD,OAAQlB,IAAI,CAACO,aAAa,CAACgB,QAAQ,EAAE;IAAEC,KAAK,EAAE;MAAEP,KAAK;MAAEG,MAAM;MAAEC;IAAU,CAAC;IAAET,QAAQ,EAAEZ,IAAI,CAAC,KAAK,EAAE;MAAEa,SAAS,EAAEX,OAAO,CAACe,KAAK,CAACQ,IAAI,CAACC,IAAI,EAAET,KAAK,CAACQ,IAAI,CAACE,QAAQ,CAAChB,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC,EAAEM,KAAK,CAACQ,IAAI,CAACT,OAAO,CAACA,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC,EAAEH,SAAS,CAAC;MAAE,GAAGM,KAAK;MAAEP,QAAQ,EAAEZ,IAAI,CAAC,KAAK,EAAE;QAAEa,SAAS,EAAEX,OAAO,CAACe,KAAK,CAACQ,IAAI,CAACG,KAAK,CAACF,IAAI,EAAET,KAAK,CAACQ,IAAI,CAACG,KAAK,CAACd,KAAK,CAACA,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;QAAEF,QAAQ,EAAEA;MAAS,CAAC;IAAE,CAAC;EAAE,CAAC,CAAC;AACtY,CAAC;AACDF,eAAe,CAACmB,WAAW,GAAG,QAAQ;AACtCxB,WAAW,CAACwB,WAAW,GAAG,cAAc;AACxCvB,cAAc,CAACuB,WAAW,GAAG,iBAAiB;AAC9CrB,UAAU,CAACqB,WAAW,GAAG,aAAa;AACtCpB,YAAY,CAACoB,WAAW,GAAG,eAAe;AAC1C,OAAO,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAACtB,eAAe,EAAE;EACjDuB,KAAK,EAAE5B,WAAW;EAClB6B,QAAQ,EAAE5B,cAAc;EACxB6B,IAAI,EAAE3B,UAAU;EAChB4B,MAAM,EAAE3B;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}