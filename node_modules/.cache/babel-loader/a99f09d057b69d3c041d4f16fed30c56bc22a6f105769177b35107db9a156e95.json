{"ast":null,"code":"'use client';\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { useTimelineContentContext } from './TimelineContentContext';\nexport const TimelineBody = ({\n  children,\n  className,\n  theme: customTheme = {},\n  ...props\n}) => {\n  const {\n    theme: contentTheme\n  } = useTimelineContentContext();\n  const theme = mergeDeep(contentTheme.body, customTheme);\n  return _jsx(\"div\", {\n    className: twMerge(theme.base, className),\n    ...props,\n    children: children\n  });\n};","map":{"version":3,"names":["jsx","_jsx","twMerge","mergeDeep","useTimelineContentContext","TimelineBody","children","className","theme","customTheme","props","contentTheme","body","base"],"sources":["C:/Users/shivr/Downloads/2/Shiv/node_modules/flowbite-react/lib/esm/components/Timeline/TimelineBody.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { useTimelineContentContext } from './TimelineContentContext';\nexport const TimelineBody = ({ children, className, theme: customTheme = {}, ...props }) => {\n    const { theme: contentTheme } = useTimelineContentContext();\n    const theme = mergeDeep(contentTheme.body, customTheme);\n    return (_jsx(\"div\", { className: twMerge(theme.base, className), ...props, children: children }));\n};\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,yBAAyB,QAAQ,0BAA0B;AACpE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,KAAK,EAAEC,WAAW,GAAG,CAAC,CAAC;EAAE,GAAGC;AAAM,CAAC,KAAK;EACxF,MAAM;IAAEF,KAAK,EAAEG;EAAa,CAAC,GAAGP,yBAAyB,CAAC,CAAC;EAC3D,MAAMI,KAAK,GAAGL,SAAS,CAACQ,YAAY,CAACC,IAAI,EAAEH,WAAW,CAAC;EACvD,OAAQR,IAAI,CAAC,KAAK,EAAE;IAAEM,SAAS,EAAEL,OAAO,CAACM,KAAK,CAACK,IAAI,EAAEN,SAAS,CAAC;IAAE,GAAGG,KAAK;IAAEJ,QAAQ,EAAEA;EAAS,CAAC,CAAC;AACpG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}