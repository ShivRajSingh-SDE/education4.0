{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { PureComponent } from 'react';\nimport classnames from 'classnames';\nimport debounce from 'debounce';\nconst SCROLL_END_DEBOUNCE = 300;\nconst LEFT_BUTTON = 0;\nexport default class ScrollContainer extends PureComponent {\n  static defaultProps = {\n    nativeMobileScroll: true,\n    hideScrollbars: true,\n    activationDistance: 10,\n    vertical: true,\n    horizontal: true,\n    stopPropagation: false,\n    style: {},\n    buttons: [LEFT_BUTTON]\n  };\n  container;\n  scrolling;\n  started;\n  pressed;\n  isMobile = false;\n  internal;\n  scrollLeft;\n  scrollTop;\n  clientX;\n  clientY;\n  constructor(props) {\n    super(props);\n    this.container = React.createRef();\n    this.onEndScroll = debounce(this.onEndScroll, SCROLL_END_DEBOUNCE);\n    // Is container scrolling now (for example by inertia)\n    this.scrolling = false;\n    // Is scrolling started\n    this.started = false;\n    // Is touch active or mouse pressed down\n    this.pressed = false;\n    // Is event internal\n    this.internal = false;\n    // Bind callbacks\n    this.getRef = this.getRef.bind(this);\n  }\n  componentDidMount() {\n    const {\n      nativeMobileScroll\n    } = this.props;\n    const container = this.container.current;\n    window.addEventListener('mouseup', this.onMouseUp);\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('touchmove', this.onTouchMove, {\n      passive: false\n    });\n    window.addEventListener('touchend', this.onTouchEnd);\n    // due to https://github.com/facebook/react/issues/9809#issuecomment-414072263\n    container.addEventListener('touchstart', this.onTouchStart, {\n      passive: false\n    });\n    container.addEventListener('mousedown', this.onMouseDown, {\n      passive: false\n    });\n    if (nativeMobileScroll) {\n      // We should check if it's the mobile device after page was loaded\n      // to prevent breaking SSR\n      this.isMobile = this.isMobileDevice();\n      // If it's the mobile device, we should rerender to change styles\n      if (this.isMobile) {\n        this.forceUpdate();\n      }\n    }\n  }\n  componentWillUnmount() {\n    window.removeEventListener('mouseup', this.onMouseUp);\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('touchmove', this.onTouchMove);\n    window.removeEventListener('touchend', this.onTouchEnd);\n  }\n  getElement() {\n    return this.container.current;\n  }\n  isMobileDevice() {\n    return typeof window.orientation !== 'undefined' || navigator.userAgent.indexOf('IEMobile') !== -1;\n  }\n  isDraggable(target) {\n    const ignoreElements = this.props.ignoreElements;\n    if (ignoreElements) {\n      const closest = target.closest(ignoreElements);\n      return closest === null || closest.contains(this.getElement());\n    } else {\n      return true;\n    }\n  }\n  isScrollable() {\n    const container = this.container.current;\n    return container && (container.scrollWidth > container.clientWidth || container.scrollHeight > container.clientHeight);\n  }\n  // Simulate 'onEndScroll' event that fires when scrolling is stopped\n  onEndScroll = () => {\n    this.scrolling = false;\n    if (!this.pressed && this.started) {\n      this.processEnd();\n    }\n  };\n  onScroll = () => {\n    const container = this.container.current;\n    // Ignore the internal scrolls\n    if (container.scrollLeft !== this.scrollLeft || container.scrollTop !== this.scrollTop) {\n      this.scrolling = true;\n      this.processScroll();\n      this.onEndScroll();\n    }\n  };\n  onTouchStart = e => {\n    const {\n      nativeMobileScroll\n    } = this.props;\n    if (this.isDraggable(e.target)) {\n      this.internal = true;\n      if (nativeMobileScroll && this.scrolling) {\n        this.pressed = true;\n      } else {\n        const touch = e.touches[0];\n        this.processClick(touch.clientX, touch.clientY);\n        if (!nativeMobileScroll && this.props.stopPropagation) {\n          e.stopPropagation();\n        }\n      }\n    }\n  };\n  onTouchEnd = () => {\n    const {\n      nativeMobileScroll\n    } = this.props;\n    if (this.pressed) {\n      if (this.started && (!this.scrolling || !nativeMobileScroll)) {\n        this.processEnd();\n      } else {\n        this.pressed = false;\n      }\n      this.forceUpdate();\n    }\n  };\n  onTouchMove = e => {\n    const {\n      nativeMobileScroll\n    } = this.props;\n    if (this.pressed && (!nativeMobileScroll || !this.isMobile)) {\n      const touch = e.touches[0];\n      if (touch) {\n        this.processMove(touch.clientX, touch.clientY);\n      }\n      e.preventDefault();\n      if (this.props.stopPropagation) {\n        e.stopPropagation();\n      }\n    }\n  };\n  onMouseDown = e => {\n    if (this.isDraggable(e.target) && this.isScrollable()) {\n      this.internal = true;\n      if (this.props?.buttons?.indexOf(e.button) !== -1) {\n        this.processClick(e.clientX, e.clientY);\n        e.preventDefault();\n        if (this.props.stopPropagation) {\n          e.stopPropagation();\n        }\n      }\n    }\n  };\n  onMouseMove = e => {\n    if (this.pressed) {\n      this.processMove(e.clientX, e.clientY);\n      e.preventDefault();\n      if (this.props.stopPropagation) {\n        e.stopPropagation();\n      }\n    }\n  };\n  onMouseUp = e => {\n    if (this.pressed) {\n      if (this.started) {\n        this.processEnd();\n      } else {\n        this.internal = false;\n        this.pressed = false;\n        this.forceUpdate();\n        if (this.props.onClick) {\n          this.props.onClick(e);\n        }\n      }\n      e.preventDefault();\n      if (this.props.stopPropagation) {\n        e.stopPropagation();\n      }\n    }\n  };\n  processClick(clientX, clientY) {\n    const container = this.container.current;\n    this.scrollLeft = container?.scrollLeft;\n    this.scrollTop = container?.scrollTop;\n    this.clientX = clientX;\n    this.clientY = clientY;\n    this.pressed = true;\n  }\n  processStart(changeCursor = true) {\n    const {\n      onStartScroll\n    } = this.props;\n    this.started = true;\n    // Add the class to change displayed cursor\n    if (changeCursor) {\n      document.body.classList.add('cursor-grab');\n    }\n    if (onStartScroll) {\n      onStartScroll({\n        external: !this.internal\n      });\n    }\n    this.forceUpdate();\n  }\n  // Process native scroll (scrollbar, mobile scroll)\n  processScroll() {\n    if (this.started) {\n      const {\n        onScroll\n      } = this.props;\n      if (onScroll) {\n        onScroll({\n          external: !this.internal\n        });\n      }\n    } else {\n      this.processStart(false);\n    }\n  }\n  // Process non-native scroll\n  processMove(newClientX, newClientY) {\n    const {\n      horizontal,\n      vertical,\n      activationDistance,\n      onScroll\n    } = this.props;\n    const container = this.container.current;\n    if (!this.started) {\n      if (horizontal && Math.abs(newClientX - this.clientX) > activationDistance || vertical && Math.abs(newClientY - this.clientY) > activationDistance) {\n        this.clientX = newClientX;\n        this.clientY = newClientY;\n        this.processStart();\n      }\n    } else {\n      if (horizontal) {\n        container.scrollLeft -= newClientX - this.clientX;\n      }\n      if (vertical) {\n        container.scrollTop -= newClientY - this.clientY;\n      }\n      if (onScroll) {\n        onScroll({\n          external: !this.internal\n        });\n      }\n      this.clientX = newClientX;\n      this.clientY = newClientY;\n      this.scrollLeft = container.scrollLeft;\n      this.scrollTop = container.scrollTop;\n    }\n  }\n  processEnd() {\n    const {\n      onEndScroll\n    } = this.props;\n    const container = this.container.current;\n    if (container && onEndScroll) {\n      onEndScroll({\n        external: !this.internal\n      });\n    }\n    this.pressed = false;\n    this.started = false;\n    this.scrolling = false;\n    this.internal = false;\n    document.body.classList.remove('cursor-grab');\n    this.forceUpdate();\n  }\n  getRef(el) {\n    [this.container, this.props.innerRef].forEach(ref => {\n      if (ref) {\n        if (typeof ref === 'function') {\n          ref(el);\n        } else {\n          ref.current = el;\n        }\n      }\n    });\n  }\n  render() {\n    const {\n      children,\n      draggingClassName,\n      className,\n      style,\n      hideScrollbars\n    } = this.props;\n    return _jsx(\"div\", {\n      className: classnames(className, this.pressed && draggingClassName, {\n        '!scroll-auto [&>*]:pointer-events-none [&>*]:cursor-grab': this.pressed,\n        'overflow-auto': this.isMobile,\n        'overflow-hidden !overflow-x-hidden [overflow:-moz-scrollbars-none] [scrollbar-width:none]': hideScrollbars,\n        '[&::-webkit-scrollbar]:[-webkit-appearance:none !important] [&::-webkit-scrollbar]:!hidden [&::-webkit-scrollbar]:!h-0 [&::-webkit-scrollbar]:!w-0 [&::-webkit-scrollbar]:!bg-transparent': hideScrollbars\n      }),\n      style: style,\n      ref: this.getRef,\n      onScroll: this.onScroll,\n      children: children\n    });\n  }\n}","map":{"version":3,"names":["jsx","_jsx","React","PureComponent","classnames","debounce","SCROLL_END_DEBOUNCE","LEFT_BUTTON","ScrollContainer","defaultProps","nativeMobileScroll","hideScrollbars","activationDistance","vertical","horizontal","stopPropagation","style","buttons","container","scrolling","started","pressed","isMobile","internal","scrollLeft","scrollTop","clientX","clientY","constructor","props","createRef","onEndScroll","getRef","bind","componentDidMount","current","window","addEventListener","onMouseUp","onMouseMove","onTouchMove","passive","onTouchEnd","onTouchStart","onMouseDown","isMobileDevice","forceUpdate","componentWillUnmount","removeEventListener","getElement","orientation","navigator","userAgent","indexOf","isDraggable","target","ignoreElements","closest","contains","isScrollable","scrollWidth","clientWidth","scrollHeight","clientHeight","processEnd","onScroll","processScroll","e","touch","touches","processClick","processMove","preventDefault","button","onClick","processStart","changeCursor","onStartScroll","document","body","classList","add","external","newClientX","newClientY","Math","abs","remove","el","innerRef","forEach","ref","render","children","draggingClassName","className"],"sources":["C:/Users/shivr/Downloads/2/Shiv/node_modules/flowbite-react/lib/esm/helpers/drag-scroll/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { PureComponent } from 'react';\nimport classnames from 'classnames';\nimport debounce from 'debounce';\nconst SCROLL_END_DEBOUNCE = 300;\nconst LEFT_BUTTON = 0;\nexport default class ScrollContainer extends PureComponent {\n    static defaultProps = {\n        nativeMobileScroll: true,\n        hideScrollbars: true,\n        activationDistance: 10,\n        vertical: true,\n        horizontal: true,\n        stopPropagation: false,\n        style: {},\n        buttons: [LEFT_BUTTON],\n    };\n    container;\n    scrolling;\n    started;\n    pressed;\n    isMobile = false;\n    internal;\n    scrollLeft;\n    scrollTop;\n    clientX;\n    clientY;\n    constructor(props) {\n        super(props);\n        this.container = React.createRef();\n        this.onEndScroll = debounce(this.onEndScroll, SCROLL_END_DEBOUNCE);\n        // Is container scrolling now (for example by inertia)\n        this.scrolling = false;\n        // Is scrolling started\n        this.started = false;\n        // Is touch active or mouse pressed down\n        this.pressed = false;\n        // Is event internal\n        this.internal = false;\n        // Bind callbacks\n        this.getRef = this.getRef.bind(this);\n    }\n    componentDidMount() {\n        const { nativeMobileScroll } = this.props;\n        const container = this.container.current;\n        window.addEventListener('mouseup', this.onMouseUp);\n        window.addEventListener('mousemove', this.onMouseMove);\n        window.addEventListener('touchmove', this.onTouchMove, { passive: false });\n        window.addEventListener('touchend', this.onTouchEnd);\n        // due to https://github.com/facebook/react/issues/9809#issuecomment-414072263\n        container.addEventListener('touchstart', this.onTouchStart, {\n            passive: false,\n        });\n        container.addEventListener('mousedown', this.onMouseDown, {\n            passive: false,\n        });\n        if (nativeMobileScroll) {\n            // We should check if it's the mobile device after page was loaded\n            // to prevent breaking SSR\n            this.isMobile = this.isMobileDevice();\n            // If it's the mobile device, we should rerender to change styles\n            if (this.isMobile) {\n                this.forceUpdate();\n            }\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('mouseup', this.onMouseUp);\n        window.removeEventListener('mousemove', this.onMouseMove);\n        window.removeEventListener('touchmove', this.onTouchMove);\n        window.removeEventListener('touchend', this.onTouchEnd);\n    }\n    getElement() {\n        return this.container.current;\n    }\n    isMobileDevice() {\n        return typeof window.orientation !== 'undefined' || navigator.userAgent.indexOf('IEMobile') !== -1;\n    }\n    isDraggable(target) {\n        const ignoreElements = this.props.ignoreElements;\n        if (ignoreElements) {\n            const closest = target.closest(ignoreElements);\n            return closest === null || closest.contains(this.getElement());\n        }\n        else {\n            return true;\n        }\n    }\n    isScrollable() {\n        const container = this.container.current;\n        return (container && (container.scrollWidth > container.clientWidth || container.scrollHeight > container.clientHeight));\n    }\n    // Simulate 'onEndScroll' event that fires when scrolling is stopped\n    onEndScroll = () => {\n        this.scrolling = false;\n        if (!this.pressed && this.started) {\n            this.processEnd();\n        }\n    };\n    onScroll = () => {\n        const container = this.container.current;\n        // Ignore the internal scrolls\n        if (container.scrollLeft !== this.scrollLeft || container.scrollTop !== this.scrollTop) {\n            this.scrolling = true;\n            this.processScroll();\n            this.onEndScroll();\n        }\n    };\n    onTouchStart = (e) => {\n        const { nativeMobileScroll } = this.props;\n        if (this.isDraggable(e.target)) {\n            this.internal = true;\n            if (nativeMobileScroll && this.scrolling) {\n                this.pressed = true;\n            }\n            else {\n                const touch = e.touches[0];\n                this.processClick(touch.clientX, touch.clientY);\n                if (!nativeMobileScroll && this.props.stopPropagation) {\n                    e.stopPropagation();\n                }\n            }\n        }\n    };\n    onTouchEnd = () => {\n        const { nativeMobileScroll } = this.props;\n        if (this.pressed) {\n            if (this.started && (!this.scrolling || !nativeMobileScroll)) {\n                this.processEnd();\n            }\n            else {\n                this.pressed = false;\n            }\n            this.forceUpdate();\n        }\n    };\n    onTouchMove = (e) => {\n        const { nativeMobileScroll } = this.props;\n        if (this.pressed && (!nativeMobileScroll || !this.isMobile)) {\n            const touch = e.touches[0];\n            if (touch) {\n                this.processMove(touch.clientX, touch.clientY);\n            }\n            e.preventDefault();\n            if (this.props.stopPropagation) {\n                e.stopPropagation();\n            }\n        }\n    };\n    onMouseDown = (e) => {\n        if (this.isDraggable(e.target) && this.isScrollable()) {\n            this.internal = true;\n            if (this.props?.buttons?.indexOf(e.button) !== -1) {\n                this.processClick(e.clientX, e.clientY);\n                e.preventDefault();\n                if (this.props.stopPropagation) {\n                    e.stopPropagation();\n                }\n            }\n        }\n    };\n    onMouseMove = (e) => {\n        if (this.pressed) {\n            this.processMove(e.clientX, e.clientY);\n            e.preventDefault();\n            if (this.props.stopPropagation) {\n                e.stopPropagation();\n            }\n        }\n    };\n    onMouseUp = (e) => {\n        if (this.pressed) {\n            if (this.started) {\n                this.processEnd();\n            }\n            else {\n                this.internal = false;\n                this.pressed = false;\n                this.forceUpdate();\n                if (this.props.onClick) {\n                    this.props.onClick(e);\n                }\n            }\n            e.preventDefault();\n            if (this.props.stopPropagation) {\n                e.stopPropagation();\n            }\n        }\n    };\n    processClick(clientX, clientY) {\n        const container = this.container.current;\n        this.scrollLeft = container?.scrollLeft;\n        this.scrollTop = container?.scrollTop;\n        this.clientX = clientX;\n        this.clientY = clientY;\n        this.pressed = true;\n    }\n    processStart(changeCursor = true) {\n        const { onStartScroll } = this.props;\n        this.started = true;\n        // Add the class to change displayed cursor\n        if (changeCursor) {\n            document.body.classList.add('cursor-grab');\n        }\n        if (onStartScroll) {\n            onStartScroll({\n                external: !this.internal,\n            });\n        }\n        this.forceUpdate();\n    }\n    // Process native scroll (scrollbar, mobile scroll)\n    processScroll() {\n        if (this.started) {\n            const { onScroll } = this.props;\n            if (onScroll) {\n                onScroll({\n                    external: !this.internal,\n                });\n            }\n        }\n        else {\n            this.processStart(false);\n        }\n    }\n    // Process non-native scroll\n    processMove(newClientX, newClientY) {\n        const { horizontal, vertical, activationDistance, onScroll } = this.props;\n        const container = this.container.current;\n        if (!this.started) {\n            if ((horizontal && Math.abs(newClientX - this.clientX) > activationDistance) ||\n                (vertical && Math.abs(newClientY - this.clientY) > activationDistance)) {\n                this.clientX = newClientX;\n                this.clientY = newClientY;\n                this.processStart();\n            }\n        }\n        else {\n            if (horizontal) {\n                container.scrollLeft -= newClientX - this.clientX;\n            }\n            if (vertical) {\n                container.scrollTop -= newClientY - this.clientY;\n            }\n            if (onScroll) {\n                onScroll({ external: !this.internal });\n            }\n            this.clientX = newClientX;\n            this.clientY = newClientY;\n            this.scrollLeft = container.scrollLeft;\n            this.scrollTop = container.scrollTop;\n        }\n    }\n    processEnd() {\n        const { onEndScroll } = this.props;\n        const container = this.container.current;\n        if (container && onEndScroll) {\n            onEndScroll({\n                external: !this.internal,\n            });\n        }\n        this.pressed = false;\n        this.started = false;\n        this.scrolling = false;\n        this.internal = false;\n        document.body.classList.remove('cursor-grab');\n        this.forceUpdate();\n    }\n    getRef(el) {\n        [this.container, this.props.innerRef].forEach((ref) => {\n            if (ref) {\n                if (typeof ref === 'function') {\n                    ref(el);\n                }\n                else {\n                    ref.current = el;\n                }\n            }\n        });\n    }\n    render() {\n        const { children, draggingClassName, className, style, hideScrollbars } = this.props;\n        return (_jsx(\"div\", { className: classnames(className, this.pressed && draggingClassName, {\n                '!scroll-auto [&>*]:pointer-events-none [&>*]:cursor-grab': this.pressed,\n                'overflow-auto': this.isMobile,\n                'overflow-hidden !overflow-x-hidden [overflow:-moz-scrollbars-none] [scrollbar-width:none]': hideScrollbars,\n                '[&::-webkit-scrollbar]:[-webkit-appearance:none !important] [&::-webkit-scrollbar]:!hidden [&::-webkit-scrollbar]:!h-0 [&::-webkit-scrollbar]:!w-0 [&::-webkit-scrollbar]:!bg-transparent': hideScrollbars,\n            }), style: style, ref: this.getRef, onScroll: this.onScroll, children: children }));\n    }\n}\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAOC,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAC5C,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,QAAQ,MAAM,UAAU;AAC/B,MAAMC,mBAAmB,GAAG,GAAG;AAC/B,MAAMC,WAAW,GAAG,CAAC;AACrB,eAAe,MAAMC,eAAe,SAASL,aAAa,CAAC;EACvD,OAAOM,YAAY,GAAG;IAClBC,kBAAkB,EAAE,IAAI;IACxBC,cAAc,EAAE,IAAI;IACpBC,kBAAkB,EAAE,EAAE;IACtBC,QAAQ,EAAE,IAAI;IACdC,UAAU,EAAE,IAAI;IAChBC,eAAe,EAAE,KAAK;IACtBC,KAAK,EAAE,CAAC,CAAC;IACTC,OAAO,EAAE,CAACV,WAAW;EACzB,CAAC;EACDW,SAAS;EACTC,SAAS;EACTC,OAAO;EACPC,OAAO;EACPC,QAAQ,GAAG,KAAK;EAChBC,QAAQ;EACRC,UAAU;EACVC,SAAS;EACTC,OAAO;EACPC,OAAO;EACPC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACX,SAAS,GAAGhB,KAAK,CAAC4B,SAAS,CAAC,CAAC;IAClC,IAAI,CAACC,WAAW,GAAG1B,QAAQ,CAAC,IAAI,CAAC0B,WAAW,EAAEzB,mBAAmB,CAAC;IAClE;IACA,IAAI,CAACa,SAAS,GAAG,KAAK;IACtB;IACA,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB;IACA,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB;IACA,IAAI,CAACE,QAAQ,GAAG,KAAK;IACrB;IACA,IAAI,CAACS,MAAM,GAAG,IAAI,CAACA,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;EACxC;EACAC,iBAAiBA,CAAA,EAAG;IAChB,MAAM;MAAExB;IAAmB,CAAC,GAAG,IAAI,CAACmB,KAAK;IACzC,MAAMX,SAAS,GAAG,IAAI,CAACA,SAAS,CAACiB,OAAO;IACxCC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACC,SAAS,CAAC;IAClDF,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACE,WAAW,CAAC;IACtDH,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACG,WAAW,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC,CAAC;IAC1EL,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAACK,UAAU,CAAC;IACpD;IACAxB,SAAS,CAACmB,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAACM,YAAY,EAAE;MACxDF,OAAO,EAAE;IACb,CAAC,CAAC;IACFvB,SAAS,CAACmB,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACO,WAAW,EAAE;MACtDH,OAAO,EAAE;IACb,CAAC,CAAC;IACF,IAAI/B,kBAAkB,EAAE;MACpB;MACA;MACA,IAAI,CAACY,QAAQ,GAAG,IAAI,CAACuB,cAAc,CAAC,CAAC;MACrC;MACA,IAAI,IAAI,CAACvB,QAAQ,EAAE;QACf,IAAI,CAACwB,WAAW,CAAC,CAAC;MACtB;IACJ;EACJ;EACAC,oBAAoBA,CAAA,EAAG;IACnBX,MAAM,CAACY,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACV,SAAS,CAAC;IACrDF,MAAM,CAACY,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACT,WAAW,CAAC;IACzDH,MAAM,CAACY,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAACR,WAAW,CAAC;IACzDJ,MAAM,CAACY,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAACN,UAAU,CAAC;EAC3D;EACAO,UAAUA,CAAA,EAAG;IACT,OAAO,IAAI,CAAC/B,SAAS,CAACiB,OAAO;EACjC;EACAU,cAAcA,CAAA,EAAG;IACb,OAAO,OAAOT,MAAM,CAACc,WAAW,KAAK,WAAW,IAAIC,SAAS,CAACC,SAAS,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;EACtG;EACAC,WAAWA,CAACC,MAAM,EAAE;IAChB,MAAMC,cAAc,GAAG,IAAI,CAAC3B,KAAK,CAAC2B,cAAc;IAChD,IAAIA,cAAc,EAAE;MAChB,MAAMC,OAAO,GAAGF,MAAM,CAACE,OAAO,CAACD,cAAc,CAAC;MAC9C,OAAOC,OAAO,KAAK,IAAI,IAAIA,OAAO,CAACC,QAAQ,CAAC,IAAI,CAACT,UAAU,CAAC,CAAC,CAAC;IAClE,CAAC,MACI;MACD,OAAO,IAAI;IACf;EACJ;EACAU,YAAYA,CAAA,EAAG;IACX,MAAMzC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACiB,OAAO;IACxC,OAAQjB,SAAS,KAAKA,SAAS,CAAC0C,WAAW,GAAG1C,SAAS,CAAC2C,WAAW,IAAI3C,SAAS,CAAC4C,YAAY,GAAG5C,SAAS,CAAC6C,YAAY,CAAC;EAC3H;EACA;EACAhC,WAAW,GAAGA,CAAA,KAAM;IAChB,IAAI,CAACZ,SAAS,GAAG,KAAK;IACtB,IAAI,CAAC,IAAI,CAACE,OAAO,IAAI,IAAI,CAACD,OAAO,EAAE;MAC/B,IAAI,CAAC4C,UAAU,CAAC,CAAC;IACrB;EACJ,CAAC;EACDC,QAAQ,GAAGA,CAAA,KAAM;IACb,MAAM/C,SAAS,GAAG,IAAI,CAACA,SAAS,CAACiB,OAAO;IACxC;IACA,IAAIjB,SAAS,CAACM,UAAU,KAAK,IAAI,CAACA,UAAU,IAAIN,SAAS,CAACO,SAAS,KAAK,IAAI,CAACA,SAAS,EAAE;MACpF,IAAI,CAACN,SAAS,GAAG,IAAI;MACrB,IAAI,CAAC+C,aAAa,CAAC,CAAC;MACpB,IAAI,CAACnC,WAAW,CAAC,CAAC;IACtB;EACJ,CAAC;EACDY,YAAY,GAAIwB,CAAC,IAAK;IAClB,MAAM;MAAEzD;IAAmB,CAAC,GAAG,IAAI,CAACmB,KAAK;IACzC,IAAI,IAAI,CAACyB,WAAW,CAACa,CAAC,CAACZ,MAAM,CAAC,EAAE;MAC5B,IAAI,CAAChC,QAAQ,GAAG,IAAI;MACpB,IAAIb,kBAAkB,IAAI,IAAI,CAACS,SAAS,EAAE;QACtC,IAAI,CAACE,OAAO,GAAG,IAAI;MACvB,CAAC,MACI;QACD,MAAM+C,KAAK,GAAGD,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC;QAC1B,IAAI,CAACC,YAAY,CAACF,KAAK,CAAC1C,OAAO,EAAE0C,KAAK,CAACzC,OAAO,CAAC;QAC/C,IAAI,CAACjB,kBAAkB,IAAI,IAAI,CAACmB,KAAK,CAACd,eAAe,EAAE;UACnDoD,CAAC,CAACpD,eAAe,CAAC,CAAC;QACvB;MACJ;IACJ;EACJ,CAAC;EACD2B,UAAU,GAAGA,CAAA,KAAM;IACf,MAAM;MAAEhC;IAAmB,CAAC,GAAG,IAAI,CAACmB,KAAK;IACzC,IAAI,IAAI,CAACR,OAAO,EAAE;MACd,IAAI,IAAI,CAACD,OAAO,KAAK,CAAC,IAAI,CAACD,SAAS,IAAI,CAACT,kBAAkB,CAAC,EAAE;QAC1D,IAAI,CAACsD,UAAU,CAAC,CAAC;MACrB,CAAC,MACI;QACD,IAAI,CAAC3C,OAAO,GAAG,KAAK;MACxB;MACA,IAAI,CAACyB,WAAW,CAAC,CAAC;IACtB;EACJ,CAAC;EACDN,WAAW,GAAI2B,CAAC,IAAK;IACjB,MAAM;MAAEzD;IAAmB,CAAC,GAAG,IAAI,CAACmB,KAAK;IACzC,IAAI,IAAI,CAACR,OAAO,KAAK,CAACX,kBAAkB,IAAI,CAAC,IAAI,CAACY,QAAQ,CAAC,EAAE;MACzD,MAAM8C,KAAK,GAAGD,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC;MAC1B,IAAID,KAAK,EAAE;QACP,IAAI,CAACG,WAAW,CAACH,KAAK,CAAC1C,OAAO,EAAE0C,KAAK,CAACzC,OAAO,CAAC;MAClD;MACAwC,CAAC,CAACK,cAAc,CAAC,CAAC;MAClB,IAAI,IAAI,CAAC3C,KAAK,CAACd,eAAe,EAAE;QAC5BoD,CAAC,CAACpD,eAAe,CAAC,CAAC;MACvB;IACJ;EACJ,CAAC;EACD6B,WAAW,GAAIuB,CAAC,IAAK;IACjB,IAAI,IAAI,CAACb,WAAW,CAACa,CAAC,CAACZ,MAAM,CAAC,IAAI,IAAI,CAACI,YAAY,CAAC,CAAC,EAAE;MACnD,IAAI,CAACpC,QAAQ,GAAG,IAAI;MACpB,IAAI,IAAI,CAACM,KAAK,EAAEZ,OAAO,EAAEoC,OAAO,CAACc,CAAC,CAACM,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;QAC/C,IAAI,CAACH,YAAY,CAACH,CAAC,CAACzC,OAAO,EAAEyC,CAAC,CAACxC,OAAO,CAAC;QACvCwC,CAAC,CAACK,cAAc,CAAC,CAAC;QAClB,IAAI,IAAI,CAAC3C,KAAK,CAACd,eAAe,EAAE;UAC5BoD,CAAC,CAACpD,eAAe,CAAC,CAAC;QACvB;MACJ;IACJ;EACJ,CAAC;EACDwB,WAAW,GAAI4B,CAAC,IAAK;IACjB,IAAI,IAAI,CAAC9C,OAAO,EAAE;MACd,IAAI,CAACkD,WAAW,CAACJ,CAAC,CAACzC,OAAO,EAAEyC,CAAC,CAACxC,OAAO,CAAC;MACtCwC,CAAC,CAACK,cAAc,CAAC,CAAC;MAClB,IAAI,IAAI,CAAC3C,KAAK,CAACd,eAAe,EAAE;QAC5BoD,CAAC,CAACpD,eAAe,CAAC,CAAC;MACvB;IACJ;EACJ,CAAC;EACDuB,SAAS,GAAI6B,CAAC,IAAK;IACf,IAAI,IAAI,CAAC9C,OAAO,EAAE;MACd,IAAI,IAAI,CAACD,OAAO,EAAE;QACd,IAAI,CAAC4C,UAAU,CAAC,CAAC;MACrB,CAAC,MACI;QACD,IAAI,CAACzC,QAAQ,GAAG,KAAK;QACrB,IAAI,CAACF,OAAO,GAAG,KAAK;QACpB,IAAI,CAACyB,WAAW,CAAC,CAAC;QAClB,IAAI,IAAI,CAACjB,KAAK,CAAC6C,OAAO,EAAE;UACpB,IAAI,CAAC7C,KAAK,CAAC6C,OAAO,CAACP,CAAC,CAAC;QACzB;MACJ;MACAA,CAAC,CAACK,cAAc,CAAC,CAAC;MAClB,IAAI,IAAI,CAAC3C,KAAK,CAACd,eAAe,EAAE;QAC5BoD,CAAC,CAACpD,eAAe,CAAC,CAAC;MACvB;IACJ;EACJ,CAAC;EACDuD,YAAYA,CAAC5C,OAAO,EAAEC,OAAO,EAAE;IAC3B,MAAMT,SAAS,GAAG,IAAI,CAACA,SAAS,CAACiB,OAAO;IACxC,IAAI,CAACX,UAAU,GAAGN,SAAS,EAAEM,UAAU;IACvC,IAAI,CAACC,SAAS,GAAGP,SAAS,EAAEO,SAAS;IACrC,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACN,OAAO,GAAG,IAAI;EACvB;EACAsD,YAAYA,CAACC,YAAY,GAAG,IAAI,EAAE;IAC9B,MAAM;MAAEC;IAAc,CAAC,GAAG,IAAI,CAAChD,KAAK;IACpC,IAAI,CAACT,OAAO,GAAG,IAAI;IACnB;IACA,IAAIwD,YAAY,EAAE;MACdE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC;IAC9C;IACA,IAAIJ,aAAa,EAAE;MACfA,aAAa,CAAC;QACVK,QAAQ,EAAE,CAAC,IAAI,CAAC3D;MACpB,CAAC,CAAC;IACN;IACA,IAAI,CAACuB,WAAW,CAAC,CAAC;EACtB;EACA;EACAoB,aAAaA,CAAA,EAAG;IACZ,IAAI,IAAI,CAAC9C,OAAO,EAAE;MACd,MAAM;QAAE6C;MAAS,CAAC,GAAG,IAAI,CAACpC,KAAK;MAC/B,IAAIoC,QAAQ,EAAE;QACVA,QAAQ,CAAC;UACLiB,QAAQ,EAAE,CAAC,IAAI,CAAC3D;QACpB,CAAC,CAAC;MACN;IACJ,CAAC,MACI;MACD,IAAI,CAACoD,YAAY,CAAC,KAAK,CAAC;IAC5B;EACJ;EACA;EACAJ,WAAWA,CAACY,UAAU,EAAEC,UAAU,EAAE;IAChC,MAAM;MAAEtE,UAAU;MAAED,QAAQ;MAAED,kBAAkB;MAAEqD;IAAS,CAAC,GAAG,IAAI,CAACpC,KAAK;IACzE,MAAMX,SAAS,GAAG,IAAI,CAACA,SAAS,CAACiB,OAAO;IACxC,IAAI,CAAC,IAAI,CAACf,OAAO,EAAE;MACf,IAAKN,UAAU,IAAIuE,IAAI,CAACC,GAAG,CAACH,UAAU,GAAG,IAAI,CAACzD,OAAO,CAAC,GAAGd,kBAAkB,IACtEC,QAAQ,IAAIwE,IAAI,CAACC,GAAG,CAACF,UAAU,GAAG,IAAI,CAACzD,OAAO,CAAC,GAAGf,kBAAmB,EAAE;QACxE,IAAI,CAACc,OAAO,GAAGyD,UAAU;QACzB,IAAI,CAACxD,OAAO,GAAGyD,UAAU;QACzB,IAAI,CAACT,YAAY,CAAC,CAAC;MACvB;IACJ,CAAC,MACI;MACD,IAAI7D,UAAU,EAAE;QACZI,SAAS,CAACM,UAAU,IAAI2D,UAAU,GAAG,IAAI,CAACzD,OAAO;MACrD;MACA,IAAIb,QAAQ,EAAE;QACVK,SAAS,CAACO,SAAS,IAAI2D,UAAU,GAAG,IAAI,CAACzD,OAAO;MACpD;MACA,IAAIsC,QAAQ,EAAE;QACVA,QAAQ,CAAC;UAAEiB,QAAQ,EAAE,CAAC,IAAI,CAAC3D;QAAS,CAAC,CAAC;MAC1C;MACA,IAAI,CAACG,OAAO,GAAGyD,UAAU;MACzB,IAAI,CAACxD,OAAO,GAAGyD,UAAU;MACzB,IAAI,CAAC5D,UAAU,GAAGN,SAAS,CAACM,UAAU;MACtC,IAAI,CAACC,SAAS,GAAGP,SAAS,CAACO,SAAS;IACxC;EACJ;EACAuC,UAAUA,CAAA,EAAG;IACT,MAAM;MAAEjC;IAAY,CAAC,GAAG,IAAI,CAACF,KAAK;IAClC,MAAMX,SAAS,GAAG,IAAI,CAACA,SAAS,CAACiB,OAAO;IACxC,IAAIjB,SAAS,IAAIa,WAAW,EAAE;MAC1BA,WAAW,CAAC;QACRmD,QAAQ,EAAE,CAAC,IAAI,CAAC3D;MACpB,CAAC,CAAC;IACN;IACA,IAAI,CAACF,OAAO,GAAG,KAAK;IACpB,IAAI,CAACD,OAAO,GAAG,KAAK;IACpB,IAAI,CAACD,SAAS,GAAG,KAAK;IACtB,IAAI,CAACI,QAAQ,GAAG,KAAK;IACrBuD,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACO,MAAM,CAAC,aAAa,CAAC;IAC7C,IAAI,CAACzC,WAAW,CAAC,CAAC;EACtB;EACAd,MAAMA,CAACwD,EAAE,EAAE;IACP,CAAC,IAAI,CAACtE,SAAS,EAAE,IAAI,CAACW,KAAK,CAAC4D,QAAQ,CAAC,CAACC,OAAO,CAAEC,GAAG,IAAK;MACnD,IAAIA,GAAG,EAAE;QACL,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;UAC3BA,GAAG,CAACH,EAAE,CAAC;QACX,CAAC,MACI;UACDG,GAAG,CAACxD,OAAO,GAAGqD,EAAE;QACpB;MACJ;IACJ,CAAC,CAAC;EACN;EACAI,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEC,QAAQ;MAAEC,iBAAiB;MAAEC,SAAS;MAAE/E,KAAK;MAAEL;IAAe,CAAC,GAAG,IAAI,CAACkB,KAAK;IACpF,OAAQ5B,IAAI,CAAC,KAAK,EAAE;MAAE8F,SAAS,EAAE3F,UAAU,CAAC2F,SAAS,EAAE,IAAI,CAAC1E,OAAO,IAAIyE,iBAAiB,EAAE;QAClF,0DAA0D,EAAE,IAAI,CAACzE,OAAO;QACxE,eAAe,EAAE,IAAI,CAACC,QAAQ;QAC9B,2FAA2F,EAAEX,cAAc;QAC3G,2LAA2L,EAAEA;MACjM,CAAC,CAAC;MAAEK,KAAK,EAAEA,KAAK;MAAE2E,GAAG,EAAE,IAAI,CAAC3D,MAAM;MAAEiC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MAAE4B,QAAQ,EAAEA;IAAS,CAAC,CAAC;EAC1F;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}