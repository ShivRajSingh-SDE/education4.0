{"ast":null,"code":"'use client';\n\nimport { useEffect } from 'react';\n/**\n * Triggers `onChange` when another browser tab instance mutates the LS value.\n */\nexport const useWatchLocalStorageValue = ({\n  key: watchKey,\n  onChange\n}) => {\n  function handleStorageChange({\n    key,\n    newValue\n  }) {\n    if (key === watchKey) onChange(newValue);\n  }\n  useEffect(() => {\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []); // eslint-disable-line\n};","map":{"version":3,"names":["useEffect","useWatchLocalStorageValue","key","watchKey","onChange","handleStorageChange","newValue","window","addEventListener","removeEventListener"],"sources":["C:/Users/shivr/Downloads/2/Shiv/node_modules/flowbite-react/lib/esm/hooks/use-watch-localstorage-value.js"],"sourcesContent":["'use client';\nimport { useEffect } from 'react';\n/**\n * Triggers `onChange` when another browser tab instance mutates the LS value.\n */\nexport const useWatchLocalStorageValue = ({ key: watchKey, onChange, }) => {\n    function handleStorageChange({ key, newValue }) {\n        if (key === watchKey)\n            onChange(newValue);\n    }\n    useEffect(() => {\n        window.addEventListener('storage', handleStorageChange);\n        return () => window.removeEventListener('storage', handleStorageChange);\n    }, []); // eslint-disable-line\n};\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,SAAS,QAAQ,OAAO;AACjC;AACA;AACA;AACA,OAAO,MAAMC,yBAAyB,GAAGA,CAAC;EAAEC,GAAG,EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EACvE,SAASC,mBAAmBA,CAAC;IAAEH,GAAG;IAAEI;EAAS,CAAC,EAAE;IAC5C,IAAIJ,GAAG,KAAKC,QAAQ,EAChBC,QAAQ,CAACE,QAAQ,CAAC;EAC1B;EACAN,SAAS,CAAC,MAAM;IACZO,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEH,mBAAmB,CAAC;IACvD,OAAO,MAAME,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEJ,mBAAmB,CAAC;EAC3E,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}